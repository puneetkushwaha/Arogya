import React, { useState } from 'react';
import Icon from '../../../components/AppIcon';
import Button from '../../../components/ui/Button';

const ActionButtons = ({ interpretation, extractedText, onSaveToHistory }) => {
  const [isSaving, setIsSaving] = useState(false);
  const [isSharing, setIsSharing] = useState(false);
  const [shareMethod, setShareMethod] = useState('');
  const [showShareOptions, setShowShareOptions] = useState(false);

  const handleSaveToHistory = async () => {
    setIsSaving(true);
    
    // Simulate saving to health history
    setTimeout(() => {
      const reportData = {
        id: Date.now(),
        date: new Date()?.toISOString(),
        type: 'Medical Report Analysis',
        extractedText,
        interpretation,
        status: 'completed'
      };
      
      // Save to localStorage (mock health history)
      const existingHistory = JSON.parse(localStorage.getItem('arogyaplus_health_history') || '[]');
      existingHistory?.unshift(reportData);
      localStorage.setItem('arogyaplus_health_history', JSON.stringify(existingHistory));
      
      onSaveToHistory(reportData);
      setIsSaving(false);
    }, 2000);
  };

  const handleDownloadSummary = () => {
    const summaryContent = `
AROGYAPLUS MEDICAL REPORT ANALYSIS
Generated on: ${new Date()?.toLocaleDateString('en-IN')}

OVERALL ASSESSMENT:
${interpretation?.summary?.content || 'No interpretation available'}

DETAILED FINDINGS:
${interpretation?.findings?.map((finding, index) => 
  `${index + 1}. ${finding?.title}\n   ${finding?.explanation}\n   Recommendation: ${finding?.recommendation}\n`
)?.join('\n') || 'No findings available'}

NEXT STEPS:
${interpretation?.nextSteps?.map((step, index) => `${index + 1}. ${step}`)?.join('\n') || 'No recommendations available'}

RISK ASSESSMENT:
${interpretation?.riskFactors?.map(risk => `${risk?.factor}: ${risk?.risk} Risk`)?.join('\n') || 'No risk assessment available'}

---
This report is generated by ArogyaPlus AI and should not replace professional medical advice.
Please consult with your healthcare provider for proper medical guidance.
    `;

    const blob = new Blob([summaryContent], { type: 'text/plain' });
    const url = window.URL?.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `medical-analysis-${new Date()?.toISOString()?.split('T')?.[0]}.txt`;
    a?.click();
    window.URL?.revokeObjectURL(url);
  };

  const handleShare = (method) => {
    setIsSharing(true);
    setShareMethod(method);
    
    const shareText = `Medical Report Analysis Summary from ArogyaPlus\n\nOverall Assessment: ${interpretation?.summary?.content?.substring(0, 100)}...\n\nGenerated on: ${new Date()?.toLocaleDateString('en-IN')}`;
    
    setTimeout(() => {
      switch (method) {
        case 'whatsapp':
          window.open(`https://wa.me/?text=${encodeURIComponent(shareText)}`, '_blank');
          break;
        case 'email':
          window.open(`mailto:?subject=Medical Report Analysis&body=${encodeURIComponent(shareText)}`, '_blank');
          break;
        case 'sms':
          window.open(`sms:?body=${encodeURIComponent(shareText)}`, '_blank');
          break;
        case 'copy':
          navigator.clipboard?.writeText(shareText);
          break;
        default:
          break;
      }
      
      setIsSharing(false);
      setShareMethod('');
      setShowShareOptions(false);
    }, 1000);
  };

  const shareOptions = [
    { method: 'whatsapp', label: 'WhatsApp', icon: 'MessageCircle', color: 'bg-green-500' },
    { method: 'email', label: 'Email', icon: 'Mail', color: 'bg-blue-500' },
    { method: 'sms', label: 'SMS', icon: 'Smartphone', color: 'bg-purple-500' },
    { method: 'copy', label: 'Copy Link', icon: 'Copy', color: 'bg-gray-500' }
  ];

  if (!interpretation) {
    return null;
  }

  return (
    <div className="bg-card rounded-xl p-6 card-elevation-1 border medical-border">
      <div className="flex items-center space-x-3 mb-6">
        <div className="w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center">
          <Icon name="Settings" size={20} color="var(--color-primary)" />
        </div>
        <div>
          <h3 className="text-lg font-heading font-bold text-text-primary">
            Actions
          </h3>
          <p className="text-sm text-text-secondary">
            Save, download, or share your analysis
          </p>
        </div>
      </div>
      {/* Primary Actions */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
        <Button
          variant="default"
          onClick={handleSaveToHistory}
          loading={isSaving}
          iconName="Save"
          iconPosition="left"
          className="w-full"
        >
          {isSaving ? 'Saving...' : 'Save to History'}
        </Button>

        <Button
          variant="outline"
          onClick={handleDownloadSummary}
          iconName="Download"
          iconPosition="left"
          className="w-full"
        >
          Download Summary
        </Button>

        <Button
          variant="secondary"
          onClick={() => setShowShareOptions(!showShareOptions)}
          iconName="Share"
          iconPosition="left"
          className="w-full"
        >
          Share Results
        </Button>
      </div>
      {/* Share Options */}
      {showShareOptions && (
        <div className="space-y-4 p-4 bg-muted/30 rounded-lg">
          <h4 className="font-medium text-text-primary">Share via:</h4>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
            {shareOptions?.map((option) => (
              <button
                key={option?.method}
                onClick={() => handleShare(option?.method)}
                disabled={isSharing && shareMethod === option?.method}
                className={`flex flex-col items-center space-y-2 p-3 rounded-lg border border-border hover:bg-card transition-gentle ${
                  isSharing && shareMethod === option?.method ? 'opacity-50' : ''
                }`}
              >
                <div className={`w-10 h-10 ${option?.color} rounded-full flex items-center justify-center`}>
                  {isSharing && shareMethod === option?.method ? (
                    <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                  ) : (
                    <Icon name={option?.icon} size={20} color="white" />
                  )}
                </div>
                <span className="text-xs font-medium text-text-primary">
                  {option?.label}
                </span>
              </button>
            ))}
          </div>
        </div>
      )}
      {/* Additional Actions */}
      <div className="space-y-4 pt-6 border-t border-border">
        <h4 className="font-medium text-text-primary">Additional Options:</h4>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <Button
            variant="ghost"
            iconName="Calendar"
            iconPosition="left"
            className="w-full justify-start"
          >
            Schedule Follow-up
          </Button>

          <Button
            variant="ghost"
            iconName="Users"
            iconPosition="left"
            className="w-full justify-start"
          >
            Consult Doctor
          </Button>

          <Button
            variant="ghost"
            iconName="FileText"
            iconPosition="left"
            className="w-full justify-start"
          >
            Generate PDF Report
          </Button>

          <Button
            variant="ghost"
            iconName="MessageSquare"
            iconPosition="left"
            className="w-full justify-start"
          >
            Ask AI Questions
          </Button>
        </div>
      </div>
      {/* Success Message */}
      {isSaving && (
        <div className="mt-4 p-3 bg-success/10 border border-success/20 rounded-lg">
          <div className="flex items-center space-x-2">
            <Icon name="CheckCircle" size={16} color="var(--color-success)" />
            <span className="text-sm text-success font-medium">
              Saving analysis to your health history...
            </span>
          </div>
        </div>
      )}
      {/* Disclaimer */}
      <div className="mt-6 p-4 bg-warning/5 border border-warning/20 rounded-lg">
        <div className="flex items-start space-x-3">
          <Icon name="AlertTriangle" size={16} color="var(--color-warning)" className="mt-0.5" />
          <div>
            <h5 className="text-sm font-medium text-text-primary mb-1">
              Medical Disclaimer
            </h5>
            <p className="text-xs text-text-secondary leading-relaxed">
              This AI analysis is for informational purposes only and should not replace professional medical advice. 
              Always consult with qualified healthcare providers for proper diagnosis and treatment.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ActionButtons;